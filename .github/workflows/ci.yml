name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop, 'feature/**' ]
  pull_request:
    branches: [ main, develop ]

env:
  MIX_ENV: test
  ELIXIR_VERSION: '1.16.2'
  OTP_VERSION: '27.0'
  NODE_VERSION: '18'

jobs:
  test:
    name: Test (Elixir ${{ matrix.elixir }} / OTP ${{ matrix.otp }})
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        elixir: ['1.16.2']
        otp: ['27.0', '26.2.5']
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: rehab_exercise_tracking_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      
      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Elixir and OTP
        uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ matrix.elixir }}
          otp-version: ${{ matrix.otp }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: 'assets/package-lock.json'

      - name: Cache Mix dependencies
        uses: actions/cache@v4
        with:
          path: |
            deps
            _build
          key: ${{ runner.os }}-mix-${{ matrix.otp }}-${{ matrix.elixir }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-mix-${{ matrix.otp }}-${{ matrix.elixir }}-

      - name: Cache npm dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Mix dependencies
        run: mix deps.get

      - name: Install npm dependencies
        run: npm ci --prefix assets

      - name: Compile (warnings as errors)
        run: mix compile --warnings-as-errors

      - name: Check code formatting
        run: mix format --check-formatted

      - name: Run Credo (static analysis)
        run: mix credo --strict

      - name: Run security analysis
        run: mix sobelow --config

      - name: Setup test database
        run: |
          mix event_store.init
          mix ecto.setup
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/rehab_exercise_tracking_test

      - name: Run tests with coverage
        run: mix test --cover --export-coverage default
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/rehab_exercise_tracking_test
          REDIS_URL: redis://localhost:6379/0

      - name: Generate coverage report
        run: mix test.coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./cover/excoveralls.json
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

  dialyzer:
    name: Static Analysis (Dialyzer)
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Elixir and OTP
        uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ env.ELIXIR_VERSION }}
          otp-version: ${{ env.OTP_VERSION }}

      - name: Cache Mix dependencies
        uses: actions/cache@v4
        with:
          path: |
            deps
            _build
          key: ${{ runner.os }}-mix-${{ env.OTP_VERSION }}-${{ env.ELIXIR_VERSION }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-mix-${{ env.OTP_VERSION }}-${{ env.ELIXIR_VERSION }}-

      - name: Cache PLT files
        uses: actions/cache@v4
        with:
          path: priv/plts
          key: ${{ runner.os }}-plt-${{ env.OTP_VERSION }}-${{ env.ELIXIR_VERSION }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-plt-${{ env.OTP_VERSION }}-${{ env.ELIXIR_VERSION }}-

      - name: Install Mix dependencies
        run: mix deps.get

      - name: Compile
        run: mix compile

      - name: Run Dialyzer
        run: mix dialyzer --format github

  assets:
    name: Assets Build & Test
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: 'assets/package-lock.json'

      - name: Install npm dependencies
        run: npm ci --prefix assets

      - name: Run JavaScript tests
        run: npm test --prefix assets

      - name: Run ESLint
        run: npm run lint --prefix assets

      - name: Build assets
        run: npm run build --prefix assets

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: assets-build
          path: priv/static/

  e2e:
    name: End-to-End Tests
    runs-on: ubuntu-latest
    needs: [test, assets]
    if: github.event_name == 'pull_request'
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: rehab_exercise_tracking_e2e
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Elixir and OTP
        uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ env.ELIXIR_VERSION }}
          otp-version: ${{ env.OTP_VERSION }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Cache Mix dependencies
        uses: actions/cache@v4
        with:
          path: |
            deps
            _build
          key: ${{ runner.os }}-mix-${{ env.OTP_VERSION }}-${{ env.ELIXIR_VERSION }}-${{ hashFiles('**/mix.lock') }}

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: assets-build
          path: priv/static/

      - name: Install Mix dependencies
        run: mix deps.get

      - name: Compile
        run: MIX_ENV=e2e mix compile

      - name: Setup E2E database
        run: |
          MIX_ENV=e2e mix event_store.init
          MIX_ENV=e2e mix ecto.setup
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/rehab_exercise_tracking_e2e

      - name: Run E2E tests (Wallaby)
        run: MIX_ENV=e2e mix test test/e2e --max-failures 1
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/rehab_exercise_tracking_e2e

  performance:
    name: Performance Benchmarks
    runs-on: ubuntu-latest
    needs: [test]
    if: github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'performance')
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: rehab_exercise_tracking_bench
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Elixir and OTP
        uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ env.ELIXIR_VERSION }}
          otp-version: ${{ env.OTP_VERSION }}

      - name: Cache Mix dependencies
        uses: actions/cache@v4
        with:
          path: |
            deps
            _build
          key: ${{ runner.os }}-mix-${{ env.OTP_VERSION }}-${{ env.ELIXIR_VERSION }}-${{ hashFiles('**/mix.lock') }}

      - name: Install Mix dependencies
        run: mix deps.get

      - name: Compile
        run: MIX_ENV=bench mix compile

      - name: Setup benchmark database
        run: |
          MIX_ENV=bench mix event_store.init
          MIX_ENV=bench mix ecto.setup
          MIX_ENV=bench mix rehab.seed --size large
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/rehab_exercise_tracking_bench

      - name: Run performance benchmarks
        run: MIX_ENV=bench mix bench --save
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/rehab_exercise_tracking_bench

      - name: Upload benchmark results
        uses: actions/upload-artifact@v4
        with:
          name: benchmark-results
          path: bench/results/

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Elixir and OTP
        uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ env.ELIXIR_VERSION }}
          otp-version: ${{ env.OTP_VERSION }}

      - name: Cache Mix dependencies
        uses: actions/cache@v4
        with:
          path: |
            deps
            _build
          key: ${{ runner.os }}-mix-${{ env.OTP_VERSION }}-${{ env.ELIXIR_VERSION }}-${{ hashFiles('**/mix.lock') }}

      - name: Install Mix dependencies
        run: mix deps.get

      - name: Check for known vulnerabilities
        run: mix deps.audit

      - name: Run security analysis
        run: mix sobelow --config --exit

  quality:
    name: Code Quality Gate
    runs-on: ubuntu-latest
    needs: [test, dialyzer, assets, security]
    
    steps:
      - name: Quality Gate
        run: |
          echo "âœ… All quality checks passed!"
          echo "- Tests: PASSED"
          echo "- Static Analysis: PASSED" 
          echo "- Assets Build: PASSED"
          echo "- Security Scan: PASSED"